# Polkadot

> Polkadot unites the world's innovators and changemakers, building and using the most transformative apps and blockchains. Access tools, guides, and resources to quickly start building custom chains, deploying smart contracts, and creating dApps.

## How to Use This File

This file is intended for AI models and developers. Use it to:
- Understand project architecture and follow builder guides (see Docs)
- Access source code (see Source Code Repos)
- Explore optional resources (see Optional)

## Metadata
- Documentation pages: 137
- Categories: 33
- Tutorials: 0
- Source repositories: 4
- Optional resources: 2

## Docs
This section lists documentation pages by category. Each entry includes the page title, a direct link to the raw Markdown file, and a short description. Pages may appear in multiple categories if they are relevant to more than one audience. Use this to retrieve focused documentation based on topic. Use this section to answer questions about core functionality, architecture, and features. If a question is about how or why something works, check here first.

Docs: Smart Contracts
- [Connect to Polkadot](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/develop/smart-contracts/connect-to-polkadot.md): Explore how to connect to Polkadot Hub, configure your wallet, and obtain test tokens for developing and testing smart contracts.
- [Local Development Node](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/develop/smart-contracts/local-development-node.md): Follow this step-by-step guide to install a Substrate node and ETH-RPC adapter for smart contract development in a local environment.
- [Polkadot Hub Smart Contract FAQs](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/develop/smart-contracts/faqs.md): Find answers to common questions about smart contract development, deployment, and compatibility in the Polkadot Hub ecosystem.
- [Interact with Precompiles](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/develop/smart-contracts/precompiles/interact-with-precompiles.md): Learn how to interact with Polkadot Hubâ€™s precompiles from Solidity to access native, low-level functions like hashing, pairing, EC ops, etc.
- [Interact with the XCM Precompile](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/develop/smart-contracts/precompiles/xcm-precompile.md): Learn how to use the XCM precompile to send cross-chain messages, execute XCM instructions, and estimate costs from your smart contracts.

Docs: Parachains
- [Add Multiple Pallet Instances](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/develop/parachains/customize-parachain/add-pallet-instances.md): Learn how to implement multiple instances of the same pallet in your Polkadot SDK-based runtime to create and interact with modular blockchain components.
- [Add Smart Contract Functionality](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/develop/parachains/customize-parachain/add-smart-contract-functionality.md): Add smart contract capabilities to your Polkadot SDK-based blockchain. Explore EVM and Wasm integration for enhanced chain functionality.
- [Make a Custom Pallet](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/develop/parachains/customize-parachain/make-custom-pallet.md): Learn how to create custom pallets using FRAME, allowing for flexible, modular, and scalable blockchain development. Follow the step-by-step guide.
- [Add a Pallet to the Runtime](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/develop/parachains/customize-parachain/add-existing-pallets.md): Learn how to include and configure pallets in a Polkadot SDK-based runtime, from adding dependencies to implementing necessary traits.
- [Pallet Testing](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/develop/parachains/testing/pallet-testing.md): Learn how to efficiently test pallets in the Polkadot SDK, ensuring the reliability and security of your pallets operations.
- [Benchmarking FRAME Pallets](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/develop/parachains/testing/benchmarking.md): Learn how to use FRAME's benchmarking framework to measure extrinsic execution costs and provide accurate weights for on-chain computations.
- [Mock Runtime for Pallet Testing](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/develop/parachains/testing/mock-runtime.md): Learn to create a mock environment in the Polkadot SDK for testing intra-pallet functionality and inter-pallet interactions seamlessly.
- [Coretime Renewal](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/develop/parachains/deployment/coretime-renewal.md): Learn how to renew coretime manually or automatically to ensure uninterrupted parachain operation with predictable pricing and minimal risk.
- [Obtain Coretime](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/develop/parachains/deployment/obtain-coretime.md): Learn how to obtain and manage coretime for your Polkadot parachain. Explore bulk and on-demand options, prerequisites, and initial setup.
- [Generate Chain Specs](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/develop/parachains/deployment/generate-chain-specs.md): Describes the role of the chain specification in a network, how to specify its parameters when starting a node, and how to customize and distribute it.
- [Build a deterministic runtime](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/develop/parachains/deployment/build-deterministic-runtime.md): Explains how to use the Polkadot SDK runtime toolbox and Docker to build deterministic Wasm binaries for Polkadot SDK-based chains.
- [Manage Coretime](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/develop/parachains/deployment/manage-coretime.md): Learn to manage bulk coretime regions through transfer, partition, interlace, assign, and pool operations for optimal resource allocation.
- [Runtime Upgrades](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/develop/parachains/maintenance/runtime-upgrades.md): This page covers how runtime versioning and storage migration support forkless upgrades for Polkadot SDK-based networks and how they factor into chain upgrades.
- [Storage Migrations](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/develop/parachains/maintenance/storage-migrations.md): Ensure smooth runtime upgrades with storage migrations, update data formats, and prevent errors. Learn when and how to implement migrations efficiently.
- [Runtime Metrics and Monitoring](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/develop/parachains/maintenance/runtime-metrics-monitoring.md): Learn how to monitor and visualize node performance in Polkadot SDK-based networks using telemetry, Prometheus, and Grafana for efficient runtime monitoring.
- [Unlock a Parachain](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/develop/parachains/maintenance/unlock-parachain.md): Learn how to unlock your parachain. This step-by-step guide covers verifying lock status, preparing calls, and executing the unlock process.

Docs: Networks
- [Connect to Kusama](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/develop/smart-contracts/connect-to-kusama.md): Explore how to connect to Kusama Hub for developing and testing smart contracts in a live environment with real monetary value.

Docs: Polkadot Protocol
- [Origins and Tracks](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/polkadot-protocol/onchain-governance/origins-tracks.md): Explore Polkadot's OpenGov origins and tracks system, defining privilege levels, decision processes, and tailored pathways for network proposals.
- [People Chain](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/polkadot-protocol/architecture/system-chains/people.md): Learn how People chain secures decentralized identity management, empowering users to control and verify digital identities without central authorities.
- [Bridge Hub](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/polkadot-protocol/architecture/system-chains/bridge-hub.md): Learn about the Bridge Hub system parachain, a parachain that facilitates the interactions from Polkadot to the rest of Web3.
- [Coretime Chain](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/polkadot-protocol/architecture/system-chains/coretime.md): Learn about the role of the Coretime system parachain, which facilitates the sale, purchase, assignment, and mechanisms of bulk coretime.
- [Asset Hub](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/polkadot-protocol/architecture/system-chains/asset-hub.md): Learn about Asset Hub in Polkadot, managing on-chain assets, foreign asset integration, and using XCM for cross-chain asset transfers.
- [Collectives Chain](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/polkadot-protocol/architecture/system-chains/collectives.md): Learn how the Collectives chain provides infrastructure for governance organizations, enabling decentralized network stewardship and decision-making.
- [Agile Coretime](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/polkadot-protocol/architecture/polkadot-chain/agile-coretime.md): Explore the efficient scheduling mechanisms to access Polkadot cores to produce blockspace continuously or on-demand.
- [Elastic Scaling](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/polkadot-protocol/architecture/polkadot-chain/elastic-scaling.md): Learn how elastic scaling in Polkadot boosts parachain throughput, reduces latency, and supports dynamic, cost-efficient resource allocation.
- [Proof of Stake Consensus](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/polkadot-protocol/architecture/polkadot-chain/pos-consensus.md): Explore Polkadot's consensus protocols for secure, scalable, and decentralized network operation, including NPoS, BABE, GRANDPA, and BEEFY.

Docs: Infrastructure
- [Validator Requirements](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/infrastructure/running-a-validator/requirements.md): Explore the technical and system requirements for running a Polkadot validator, including setup, hardware, staking prerequisites, and security best practices.
- [Set Up Secure WebSocket](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/infrastructure/running-a-node/setup-secure-wss.md): Instructions on enabling SSL for your node and setting up a secure WebSocket proxy server using nginx for remote connections.
- [Set Up a Bootnode](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/infrastructure/running-a-node/setup-bootnode.md): Learn how to configure and run a bootnode for Polkadot, including P2P, WS, and secure WSS connections with network key management and proxies.
- [Set Up a Node](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/infrastructure/running-a-node/setup-full-node.md): Learn how to install, configure, and run Polkadot nodes, including setting up different node types and connecting to the network.
- [Offenses and Slashes](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/infrastructure/staking-mechanics/offenses-and-slashes.md): Learn about how Polkadot discourages validator misconduct via an offenses and slashing system, including details on offenses and their consequences.
- [Rewards Payout](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/infrastructure/staking-mechanics/rewards-payout.md): Learn how validator rewards work on the network, including era points, payout distribution, running multiple validators, and nominator payments.
- [General Management](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/infrastructure/running-a-validator/operational-tasks/general-management.md): Optimize your Polkadot validator setup with advanced configuration techniques. Learn how to boost performance, enhance security, and ensure seamless operations.
- [Upgrade a Validator Node](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/infrastructure/running-a-validator/operational-tasks/upgrade-your-node.md): Guide to seamlessly upgrading your Polkadot validator node, managing session keys, and executing server maintenance while avoiding downtime and slashing risks.
- [Pause Validating](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/infrastructure/running-a-validator/operational-tasks/pause-validating.md): Learn how to temporarily pause staking activity in Polkadot using the chill extrinsic, with guidance for validators and nominators.
- [Set Up a Validator](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/infrastructure/running-a-validator/onboarding-and-offboarding/set-up-validator.md): Set up a Polkadot validator node to secure the network and earn staking rewards. Follow this step-by-step guide to install, configure, and manage your node.
- [Stop Validating](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/infrastructure/running-a-validator/onboarding-and-offboarding/stop-validating.md): Learn to safely stop validating on Polkadot, including chilling, unbonding tokens, and purging validator keys.
- [Validator Key Management](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/infrastructure/running-a-validator/onboarding-and-offboarding/key-management.md): Learn how to generate and manage validator keys, including session keys for consensus participation and node keys for maintaining a stable network identity.
- [Start Validating](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/infrastructure/running-a-validator/onboarding-and-offboarding/start-validating.md): Learn how to start validating on Polkadot by choosing a network, syncing your node, bonding DOT tokens, and activating your validator.

Docs: Reference
- [Glossary](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/polkadot-protocol/glossary.md): Glossary of terms used within the Polkadot ecosystem, Polkadot SDK, its subsequent libraries, and other relevant Web3 terminology.
- [JSON-RPC APIs](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/develop/smart-contracts/json-rpc-apis.md): JSON-RPC APIs guide for Polkadot Hub, covering supported methods, parameters, and examples for interacting with the chain.

Docs: Basics, Networks
- [Networks](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/develop/networks.md): Explore the Polkadot ecosystem networks and learn the unique purposes of each, tailored for blockchain innovation, testing, and enterprise-grade solutions.

Docs: Basics, Parachains
- [Overview of FRAME](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/develop/parachains/customize-parachain/overview.md): Learn how Polkadot SDKâ€™s FRAME framework simplifies blockchain development with modular pallets and support libraries for efficient runtime design.

Docs: Basics, Parachains, Tutorials
- [Build a Custom Pallet](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/tutorials/polkadot-sdk/parachains/zero-to-hero/build-custom-pallet.md): Learn how to build a custom pallet for Polkadot SDK-based blockchains with this step-by-step guide. Create and configure a simple counter pallet from scratch.
- [Add Pallets to the Runtime](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/tutorials/polkadot-sdk/parachains/zero-to-hero/add-pallets-to-runtime.md): Add pallets to your runtime for custom functionality. Learn to configure and integrate pallets in Polkadot SDK-based blockchains.
- [Set Up a Template](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/tutorials/polkadot-sdk/parachains/zero-to-hero/set-up-a-template.md): Learn to compile and run a local parachain node using Polkadot SDK. Launch, run, and interact with a pre-configured runtime template.

Docs: Basics, Polkadot Protocol
- [Send XCM Messages](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/develop/interoperability/send-messages.md): Send cross-chain messages using XCM, Polkadot's Cross-Consensus Messaging format, designed to support secure communication between chains.
- [XCM Channels](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/develop/interoperability/xcm-channels.md): Learn how Polkadot's cross-consensus messaging (XCM) channels connect parachains, facilitating communication and blockchain interaction.
- [Introduction to XCM](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/develop/interoperability/intro-to-xcm.md): Unlock blockchain interoperability with XCM â€” Polkadot's Cross-Consensus Messaging format for cross-chain interactions.
- [Testing and Debugging](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/develop/interoperability/test-and-debug.md): Learn how to test and debug cross-chain communication via the XCM Emulator to ensure interoperability and reliable execution.
- [Smart Contracts Basics Overview](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/polkadot-protocol/smart-contract-basics/overview.md): Learn how developers can build smart contracts on Polkadot by leveraging either Wasm/ink! or EVM contracts across many parachains.
- [Networks for Polkadot Hub Smart Contracts](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/polkadot-protocol/smart-contract-basics/networks.md): Explore the available networks for smart contract development on Polkadot Hub, including Westend Hub, Kusama Hub, and Polkadot Hub.
- [PolkaVM Design](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/polkadot-protocol/smart-contract-basics/polkavm-design.md): Discover PolkaVM, a high-performance smart contract VM for Polkadot, enabling Ethereum compatibility via pallet_revive, Solidity support & optimized execution.
- [Accounts in Asset Hub Smart Contracts](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/polkadot-protocol/smart-contract-basics/accounts.md): Bridges Ethereum's 20-byte addresses with Polkadot's 32-byte accounts, enabling seamless interaction while maintaining compatibility with Ethereum tooling.
- [EVM vs PolkaVM](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/polkadot-protocol/smart-contract-basics/evm-vs-polkavm.md): Compares EVM and PolkaVM, highlighting key architectural differences, gas models, memory management, and account handling while ensuring Solidity compatibility.
- [Blocks, Transactions and Fees for Asset Hub Smart Contracts](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/polkadot-protocol/smart-contract-basics/blocks-transactions-fees.md): Explore how Asset Hub smart contracts handle blocks, transactions, and fees with EVM compatibility, supporting various Ethereum transaction types.
- [Cryptography](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/polkadot-protocol/parachain-basics/cryptography.md): A concise guide to cryptography in blockchain, covering hash functions, encryption types, digital signatures, and elliptic curve applications.
- [Chain Data](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/polkadot-protocol/parachain-basics/chain-data.md): Learn how to expose and utilize chain data for blockchain applications. Discover runtime metadata, RPC APIs, and tools for efficient development.
- [Interoperability](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/polkadot-protocol/parachain-basics/interoperability.md): Explore the importance of interoperability in the Polkadot ecosystem, covering XCM, bridges, and cross-chain communication.
- [Polkadot SDK Accounts](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/polkadot-protocol/parachain-basics/accounts.md): Learn about account structures, balances, and address formats in the Polkadot SDK, including how to manage lifecycle, references, and balances.
- [Node and Runtime](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/polkadot-protocol/parachain-basics/node-and-runtime.md): Learn how Polkadot SDK-based nodes function, how the client and runtime are separated, and how they communicate using SCALE-encoded data.
- [Data Encoding](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/polkadot-protocol/parachain-basics/data-encoding.md): SCALE codec enables fast, efficient data encoding, ideal for resource-constrained environments like Wasm, supporting custom types and compact encoding.
- [Randomness](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/polkadot-protocol/parachain-basics/randomness.md): Explore the importance of randomness in PoS blockchains, focusing on Polkadotâ€™s VRF-based approach to ensure fairness and security in validator selection.
- [On-Chain Governance Overview](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/polkadot-protocol/onchain-governance/overview.md): Discover Polkadotâ€™s cutting-edge OpenGov system, enabling transparent, decentralized decision-making through direct democracy and flexible governance tracks.
- [Blocks](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/polkadot-protocol/parachain-basics/blocks-transactions-fees/blocks.md): Understand how blocks are produced, validated, and imported in Polkadot SDK-based blockchains, covering initialization, finalization, and authoring processes.
- [Transactions Weights and Fees](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/polkadot-protocol/parachain-basics/blocks-transactions-fees/fees.md): Overview of transaction weights and fees in Polkadot SDK chains, detailing how fees are calculated using a defined formula and runtime specifics.
- [Transactions](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/polkadot-protocol/parachain-basics/blocks-transactions-fees/transactions.md): Learn how to construct, submit, and validate transactions in the Polkadot SDK, covering signed, unsigned, and inherent types of transactions.
- [Overview of Polkadot's System Chains](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/polkadot-protocol/architecture/system-chains/overview.md): Discover how system parachains enhance Polkadot's scalability and performance by offloading tasks like governance, asset management, and bridging from the relay chain.

Docs: Basics, Polkadot Protocol, Networks
- [Networks](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/polkadot-protocol/parachain-basics/networks.md): Explore Polkadot's testing and production networks, including Westend, Kusama, and Paseo, for efficient development, deployment, and testing.

Docs: Basics, Polkadot Protocol, Parachains
- [Overview of the Polkadot Relay Chain](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/polkadot-protocol/architecture/polkadot-chain/overview.md): Explore Polkadot's core architecture, including its multi-chain vision, shared security, and the DOT token's governance and staking roles.
- [Overview](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/polkadot-protocol/architecture/parachains/overview.md): Learn about the role, functionality, and implementation of parachains as a developer in the wider Polkadot architecture.

Docs: Basics, Smart Contracts
- [Smart Contracts Overview](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/develop/smart-contracts/overview.md): Learn about smart contract development capabilities in the Polkadot ecosystem, either by leveraging Polkadot Hub or other alternatives.

Docs: Basics, Smart Contracts, Tutorials
- [Create a Smart Contract](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/tutorials/smart-contracts/launch-your-first-project/create-contracts.md): Learn how to write a basic smart contract using just a text editor. This guide covers creating and preparing a contract for deployment on Polkadot Hub.

Docs: Basics, Tooling
- [Install Polkadot SDK Dependencies](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/develop/parachains/install-polkadot-sdk.md): Install everything you need to begin working with Substrated-based blockchains and the Polkadot SDK, the framework for building blockchains.
- [Introduction to Polkadot SDK](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/develop/parachains/intro-polkadot-sdk.md): Learn about the Polkadot SDK, a robust developer toolkit for building custom blockchains. Explore its components and how it powers the Polkadot protocol.

Docs: Basics, Tooling, Dapps
- [XCM Tools](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/develop/toolkit/interoperability/xcm-tools.md): Explore essential XCM tools across Polkadot, crafted to enhance cross-chain functionality and integration within the ecosystem.
- [Asset Transfer API](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/develop/toolkit/interoperability/asset-transfer-api/overview.md): Asset Transfer API is a library that simplifies the transfer of assets for Polkadot SDK-based chains. It provides methods for cross-chain and local transfers.

Docs: Basics, dApps, Smart Contracts, Tutorials
- [Deploy an ERC-20 to Polkadot Hub](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/tutorials/smart-contracts/deploy-erc20.md): Deploy an ERC-20 token on Polkadot Hub using PolkaVM. This guide covers contract creation, compilation, deployment, and interaction via Polkadot Remix IDE.
- [Deploy an NFT to Polkadot Hub](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/tutorials/smart-contracts/deploy-nft.md): Deploy an NFT on Polkadot Hub using PolkaVM and OpenZeppelin. Learn how to compile, deploy, and interact with your contract using Polkadot Remix IDE.

Docs: Basics, dApps, Tooling, Tutorials
- [Fork a Chain with Chopsticks](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/tutorials/polkadot-sdk/testing/fork-live-chains.md): Learn how to fork live Polkadot SDK chains with Chopsticks. Configure forks, replay blocks, test XCM, and interact programmatically or via UI.
- [Spawn a Basic Chain with Zombienet](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/tutorials/polkadot-sdk/testing/spawn-basic-chain.md): Learn to spawn, connect to and monitor a basic blockchain network with Zombienet, using customizable configurations for streamlined development and debugging.

Docs: Basics, dApps, Tutorials
- [Register a Local Asset](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/tutorials/polkadot-sdk/system-chains/asset-hub/register-local-asset.md): Comprehensive guide to registering a local asset on the Asset Hub system parachain, including step-by-step instructions.

Docs: Parachains, Tooling
- [Polkadot Omni Node](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/develop/toolkit/parachains/polkadot-omni-node.md): Run parachain nodes easily with the polkadot-omni-node, a white-labeled binary that can run parachain nodes using a single pre-built solution.
- [Light Clients](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/develop/toolkit/parachains/light-clients.md): Light clients enable secure and efficient blockchain interaction without running a full node. Learn everything you need to know about light clients on Polkadot.
- [Quickstart Parachain Development with Pop CLI](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/develop/toolkit/parachains/quickstart/pop-cli.md): Quickly bootstrap parachain projects, scaffold templates, deploy local networks, and streamline development workflows using Pop CLI.
- [E2E Testing with Moonwall](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/develop/toolkit/parachains/e2e-testing/moonwall.md): Enhance blockchain end-to-end testing with Moonwall's standardized environment setup, comprehensive configuration management, and simple network interactions.
- [Write Tests](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/develop/toolkit/parachains/spawn-chains/zombienet/write-tests.md): Write and execute tests for blockchain networks with Zombienet's DSL. Learn to evaluate metrics, logs, events, and more for robust validation.
- [Get Started](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/develop/toolkit/parachains/spawn-chains/zombienet/get-started.md): Quickly install and configure Zombienet to deploy and test Polkadot-based blockchain networks with this comprehensive getting-started guide.
- [Get Started](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/develop/toolkit/parachains/fork-chains/chopsticks/get-started.md): Simplify Polkadot SDK development with Chopsticks. Learn essential features, how to install Chopsticks, and how to configure local blockchain forks.

Docs: Parachains, Tutorials
- [XCM Transfers from Relay Chain to Parachain](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/tutorials/interoperability/xcm-transfers/from-relaychain-to-parachain.md): Learn how to perform a reserve-backed asset transfer between a relay chain and a parachain using XCM for cross-chain interoperability.
- [Opening HRMP Channels Between Parachains](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/tutorials/interoperability/xcm-channels/para-to-para.md): Learn how to open HRMP channels between parachains on Polkadot. Discover the step-by-step process for establishing uni- and bidirectional communication.
- [Opening HRMP Channels with System Parachains](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/tutorials/interoperability/xcm-channels/para-to-system.md): Learn how to open HRMP channels with Polkadot system parachains. Discover the process for establishing bi-directional communication using a single XCM message.
- [Pallet Benchmarking](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/tutorials/polkadot-sdk/parachains/zero-to-hero/pallet-benchmarking.md): Learn how to benchmark Polkadot SDK-based pallets, assigning precise weights to extrinsics for accurate fee calculation and runtime optimization.
- [Obtain Coretime](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/tutorials/polkadot-sdk/parachains/zero-to-hero/obtain-coretime.md): Learn how to obtain coretime for block production with this guide, covering both on-demand and bulk options for smooth operations.
- [Deploy on Paseo TestNet](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/tutorials/polkadot-sdk/parachains/zero-to-hero/deploy-to-testnet.md): This guide walks you through the journey of deploying your Polkadot SDK blockchain on Paseo, detailing each step to a successful TestNet deployment.
- [Pallet Unit Testing](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/tutorials/polkadot-sdk/parachains/zero-to-hero/pallet-unit-testing.md): Discover how to create thorough unit tests for pallets built with the Polkadot SDK, using a custom pallet as a practical example.

Docs: Polkadot Protocol, Parachains
- [Parachain Consensus](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/polkadot-protocol/architecture/parachains/consensus.md): Understand how the blocks authored by parachain collators are secured by the relay chain validators and how the parachain transactions achieve finality.

Docs: Reference, Dapps
- [Asset Transfer API Reference](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/develop/toolkit/interoperability/asset-transfer-api/reference.md): Explore the Asset Transfer API Reference for comprehensive details on methods, data types, and functionalities. Essential for cross-chain asset transfers.

Docs: Reference, Polkadot Protocol
- [XCM Runtime APIs](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/develop/interoperability/xcm-runtime-apis.md): Learn about XCM Runtime APIs in Polkadot for cross-chain communication. Explore the APIs to simulate and test XCM messages before execution on the network.
- [XCM Config](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/develop/interoperability/xcm-config.md): Learn how the XCM Executor configuration works for your custom Polkadot SDK-based runtime with detailed guidance and references.

Docs: Smart Contracts, Tooling
- [Wallets for Polkadot Hub](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/develop/smart-contracts/wallets.md): Comprehensive guide to connecting and managing wallets for Polkadot Hub, covering step-by-step instructions for interacting with the ecosystem.
- [Web3.py](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/develop/smart-contracts/libraries/web3-py.md): Learn how to interact with Polkadot Hub using the Web3 python library, deploying Solidity contracts, and interacting with deployed smart contracts.
- [Web3.js](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/develop/smart-contracts/libraries/web3-js.md): Learn how to interact with Polkadot Hub using Web3.js, deploying Solidity contracts, and interacting with deployed smart contracts.
- [Deploy Contracts to Polkadot Hub with Ethers.js](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/develop/smart-contracts/libraries/ethers-js.md): Learn how to interact with Polkadot Hub using Ethers.js, from compiling and deploying Solidity contracts to interacting with deployed smart contracts.
- [viem for Polkadot Hub Smart Contracts](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/develop/smart-contracts/libraries/viem.md): This guide covers deploying and interacting with contracts on Polkadot Hub using viem, a TypeScript library for Ethereum-compatible chains.
- [Wagmi for Polkadot Hub Smart Contracts](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/develop/smart-contracts/libraries/wagmi.md): Learn how to use Wagmi React Hooks to fetch and interact with smart contracts on Polkadot Hub for seamless dApp integration.
- [Use Hardhat with Polkadot Hub](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/develop/smart-contracts/dev-environments/hardhat.md): Learn how to create, compile, test, and deploy smart contracts on Polkadot Hub using Hardhat, a powerful development environment for blockchain developers.
- [Use the Polkadot Remix IDE](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/develop/smart-contracts/dev-environments/remix.md): Explore the smart contract development and deployment process on Asset Hub using Remix IDE, a visual IDE for blockchain developers.

Docs: Tooling, Dapps
- [Indexers](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/develop/toolkit/integrations/indexers.md): Discover blockchain indexers. Enhance data access, enable fast and complex queries, and optimize blockchain data for seamless app performance.
- [Oracles](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/develop/toolkit/integrations/oracles.md): Learn about blockchain oracles, the essential bridges connecting blockchains with real-world data for decentralized applications in the Polkadot ecosystem.
- [Wallets](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/develop/toolkit/integrations/wallets.md): Explore blockchain wallets. Securely manage digital assets with hot wallets for online access or cold wallets for offline, enhanced security.
- [Python Substrate Interface](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/develop/toolkit/api-libraries/py-substrate-interface.md): Learn how to connect to Polkadot SDK-based nodes, query data, submit transactions, and manage blockchain interactions using the Python Substrate Interface.
- [Polkadot-API](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/develop/toolkit/api-libraries/papi.md): Polkadot-API (PAPI) is a modular, composable library set designed for efficient interaction with Polkadot chains, prioritizing a "light-client first" approach.
- [Sidecar Rest API](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/develop/toolkit/api-libraries/sidecar.md): Learn about Substrate API Sidecar, a REST service that provides endpoints for interacting with Polkadot SDK-based chains and simplifies blockchain interactions.
- [Subxt Rust API](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/develop/toolkit/api-libraries/subxt.md): Subxt is a Rust library for type-safe interaction with Polkadot SDK blockchains, enabling transactions, state queries, runtime API access, and more.
- [Polkadot.js API](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/develop/toolkit/api-libraries/polkadot-js-api.md): Interact with Polkadot SDK-based chains easily using the Polkadot.js API. Query chain data, submit transactions, and more via JavaScript or Typescript.
- [Dedot](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/develop/toolkit/api-libraries/dedot.md): Dedot is a next-gen JavaScript client for Polkadot and Polkadot SDK-based blockchains, offering lightweight, tree-shakable APIs with strong TypeScript support.

Docs: Tooling, Smart Contracts
- [Use Foundry with Polkadot Hub](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/develop/smart-contracts/dev-environments/foundry.md): Learn to install, configure, and use foundry-polkadot for smart contract development on Polkadot with PolkaVM bytecode compilation.

Docs: Tooling, Tutorials
- [PAPI Account Watcher Tutorial](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/tutorials/dapps/remark-tutorial.md): Build a CLI app that listens to on-chain events using the Polkadot API and responds to specific messages for a given account.
- [Fast Track a Governance Proposal](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/tutorials/onchain-governance/fast-track-gov-proposal.md): Learn how to fast-track governance proposals in Polkadot's OpenGov using Chopsticks. Simulate, test, and execute proposals confidently.

Docs: Tutorials
- [Runtime Upgrades](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/tutorials/polkadot-sdk/parachains/zero-to-hero/runtime-upgrade.md): Learn how to safely perform runtime upgrades for your Polkadot SDK-based blockchain, including step-by-step instructions.

Docs: Uncategorized
- [Terms of Use](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/terms-of-use.md): Discover the terms and conditions governing your use of our website, outlining your rights, responsibilities, and important legal details.
- [Privacy Policy](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/privacy-policy.md): This privacy policy explains in particular how, for which purposes, and to what extent your Personal Data is collected and processed by us through the Website.
- [Subscribe to Updates](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/get-support/explore-resources.md): Find Polkadot developer resources, tutorials, forums, governance proposals, and community platforms like StackExchange, Reddit, and YouTube.
- [Get in Touch](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/get-support/get-in-touch.md): Developer support for Polkadot via Telegram, Matrix, and Discord. Get help with parachains, smart contracts, nodes, and ecosystem tools.
- [AI Resources](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/ai-resources/ai-resources.md): Download LLM-optimized files of the Polkadot documentation, including full content and category-specific resources for AI agents.

Docs: dApp, Tooling, Tutorials
- [Create a dApp With Viem](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/tutorials/smart-contracts/launch-your-first-project/create-dapp-viem.md): Learn how to build a decentralized application on Polkadot Hub using Viem and Next.js by creating a simple dApp that interacts with a smart contract.
- [Create a dApp With Ethers.js](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/tutorials/smart-contracts/launch-your-first-project/create-dapp-ethers-js.md): Learn how to build a decentralized application on Polkadot Hub using Ethers.js and Next.js by creating a simple dApp that interacts with a smart contract.
- [Test and Deploy with Hardhat](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/tutorials/smart-contracts/launch-your-first-project/test-and-deploy-with-hardhat.md): Learn how to set up a Hardhat development environment, write comprehensive tests for Solidity smart contracts, and deploy to local and Polkadot Hub networks.

Docs: dApps, Tooling, Tutorials
- [Deploying Uniswap V2 on Polkadot](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/tutorials/smart-contracts/demo-aplications/deploying-uniswap-v2.md): Learn how to deploy and test Uniswap V2 on Polkadot Hub using Hardhat, bringing AMM-based token swaps to the Polkadot ecosystem.

Docs: dApps, Tutorials
- [Convert Assets on Asset Hub](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/tutorials/polkadot-sdk/system-chains/asset-hub/asset-conversion.md): A guide detailing the step-by-step process of converting assets on Asset Hub, helping users efficiently navigate asset management on the platform.
- [Register a Foreign Asset on Asset Hub](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/tutorials/polkadot-sdk/system-chains/asset-hub/register-foreign-asset.md): An in-depth guide to registering a foreign asset on the Asset Hub parachain, providing clear, step-by-step instructions.

## Source Code Repos
Frequently used source code repositories essential for working with this project. Each entry includes the repository name, GitHub URL, and a short description of what the repo contains or enables. These repositories contain the source code referenced by these docs. Use them for API references, code examples, or implementation details.
- [Polkadot SDK](https://github.com/polkadot-developers/polkadot-sdk): The core SDK for interacting with Polkadot.
- [Polkadot Runtimes](https://github.com/polkadot-fellows/runtimes): Runtimes for Polkadot and its system chains managed by the fellowship. Often referenced to see how the specific chain was configured.
- [Polkadot Parachain Template](https://github.com/paritytech/polkadot-sdk-parachain-template): Template for building a Polkadot parachain. It includes the necessary configurations and dependencies to get started quickly.
- [Polkadot API Library](https://github.com/polkadot-api/polkadot-api): Typescript library that is used often to interact with Polkadot.


## Tutorials
Tutorials for building with Polkadot. These provide step-by-step instructions for real-world use cases and implementations.
- [PAPI Account Watcher Tutorial](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/tutorials/dapps/remark-tutorial.md): Build a CLI app that listens to on-chain events using the Polkadot API and responds to specific messages for a given account.
- [Fast Track a Governance Proposal](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/tutorials/onchain-governance/fast-track-gov-proposal.md): Learn how to fast-track governance proposals in Polkadot's OpenGov using Chopsticks. Simulate, test, and execute proposals confidently.
- [Deploy an ERC-20 to Polkadot Hub](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/tutorials/smart-contracts/deploy-erc20.md): Deploy an ERC-20 token on Polkadot Hub using PolkaVM. This guide covers contract creation, compilation, deployment, and interaction via Polkadot Remix IDE.
- [Deploy an NFT to Polkadot Hub](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/tutorials/smart-contracts/deploy-nft.md): Deploy an NFT on Polkadot Hub using PolkaVM and OpenZeppelin. Learn how to compile, deploy, and interact with your contract using Polkadot Remix IDE.
- [XCM Transfers from Relay Chain to Parachain](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/tutorials/interoperability/xcm-transfers/from-relaychain-to-parachain.md): Learn how to perform a reserve-backed asset transfer between a relay chain and a parachain using XCM for cross-chain interoperability.
- [Opening HRMP Channels Between Parachains](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/tutorials/interoperability/xcm-channels/para-to-para.md): Learn how to open HRMP channels between parachains on Polkadot. Discover the step-by-step process for establishing uni- and bidirectional communication.
- [Opening HRMP Channels with System Parachains](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/tutorials/interoperability/xcm-channels/para-to-system.md): Learn how to open HRMP channels with Polkadot system parachains. Discover the process for establishing bi-directional communication using a single XCM message.
- [Fork a Chain with Chopsticks](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/tutorials/polkadot-sdk/testing/fork-live-chains.md): Learn how to fork live Polkadot SDK chains with Chopsticks. Configure forks, replay blocks, test XCM, and interact programmatically or via UI.
- [Spawn a Basic Chain with Zombienet](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/tutorials/polkadot-sdk/testing/spawn-basic-chain.md): Learn to spawn, connect to and monitor a basic blockchain network with Zombienet, using customizable configurations for streamlined development and debugging.
- [Convert Assets on Asset Hub](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/tutorials/polkadot-sdk/system-chains/asset-hub/asset-conversion.md): A guide detailing the step-by-step process of converting assets on Asset Hub, helping users efficiently navigate asset management on the platform.
- [Register a Local Asset](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/tutorials/polkadot-sdk/system-chains/asset-hub/register-local-asset.md): Comprehensive guide to registering a local asset on the Asset Hub system parachain, including step-by-step instructions.
- [Register a Foreign Asset on Asset Hub](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/tutorials/polkadot-sdk/system-chains/asset-hub/register-foreign-asset.md): An in-depth guide to registering a foreign asset on the Asset Hub parachain, providing clear, step-by-step instructions.
- [Runtime Upgrades](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/tutorials/polkadot-sdk/parachains/zero-to-hero/runtime-upgrade.md): Learn how to safely perform runtime upgrades for your Polkadot SDK-based blockchain, including step-by-step instructions.
- [Build a Custom Pallet](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/tutorials/polkadot-sdk/parachains/zero-to-hero/build-custom-pallet.md): Learn how to build a custom pallet for Polkadot SDK-based blockchains with this step-by-step guide. Create and configure a simple counter pallet from scratch.
- [Pallet Benchmarking](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/tutorials/polkadot-sdk/parachains/zero-to-hero/pallet-benchmarking.md): Learn how to benchmark Polkadot SDK-based pallets, assigning precise weights to extrinsics for accurate fee calculation and runtime optimization.
- [Obtain Coretime](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/tutorials/polkadot-sdk/parachains/zero-to-hero/obtain-coretime.md): Learn how to obtain coretime for block production with this guide, covering both on-demand and bulk options for smooth operations.
- [Add Pallets to the Runtime](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/tutorials/polkadot-sdk/parachains/zero-to-hero/add-pallets-to-runtime.md): Add pallets to your runtime for custom functionality. Learn to configure and integrate pallets in Polkadot SDK-based blockchains.
- [Set Up a Template](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/tutorials/polkadot-sdk/parachains/zero-to-hero/set-up-a-template.md): Learn to compile and run a local parachain node using Polkadot SDK. Launch, run, and interact with a pre-configured runtime template.
- [Deploy on Paseo TestNet](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/tutorials/polkadot-sdk/parachains/zero-to-hero/deploy-to-testnet.md): This guide walks you through the journey of deploying your Polkadot SDK blockchain on Paseo, detailing each step to a successful TestNet deployment.
- [Pallet Unit Testing](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/tutorials/polkadot-sdk/parachains/zero-to-hero/pallet-unit-testing.md): Discover how to create thorough unit tests for pallets built with the Polkadot SDK, using a custom pallet as a practical example.
- [Create a dApp With Viem](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/tutorials/smart-contracts/launch-your-first-project/create-dapp-viem.md): Learn how to build a decentralized application on Polkadot Hub using Viem and Next.js by creating a simple dApp that interacts with a smart contract.
- [Create a dApp With Ethers.js](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/tutorials/smart-contracts/launch-your-first-project/create-dapp-ethers-js.md): Learn how to build a decentralized application on Polkadot Hub using Ethers.js and Next.js by creating a simple dApp that interacts with a smart contract.
- [Test and Deploy with Hardhat](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/tutorials/smart-contracts/launch-your-first-project/test-and-deploy-with-hardhat.md): Learn how to set up a Hardhat development environment, write comprehensive tests for Solidity smart contracts, and deploy to local and Polkadot Hub networks.
- [Create a Smart Contract](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/tutorials/smart-contracts/launch-your-first-project/create-contracts.md): Learn how to write a basic smart contract using just a text editor. This guide covers creating and preparing a contract for deployment on Polkadot Hub.
- [Deploying Uniswap V2 on Polkadot](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/tutorials/smart-contracts/demo-aplications/deploying-uniswap-v2.md): Learn how to deploy and test Uniswap V2 on Polkadot Hub using Hardhat, bringing AMM-based token swaps to the Polkadot ecosystem.

## Optional
Additional resources:
- [Support: Get In Touch Directly](https://docs.polkadot.com/get-support/get-in-touch/): This page provides multiple options to get live technical support or ask questions.
- [Support: Ask the Community and Explore Resources](https://docs.polkadot.com/get-support/explore-resources/): This page provides multiple options to connect with the Polkadot community and find additional information via resources like Stack Exchange or Reddit.